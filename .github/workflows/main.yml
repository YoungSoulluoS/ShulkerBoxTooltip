name: Main

on:
  push:
    branches:
    - '1.20'
    tags:
    - 'v*'
  pull_request:
    branches:
    - '1.20'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup jdk 21
      uses: actions/setup-java@v4
      with:
        distribution: adopt
        java-version: 21

    - name: Validate gradle wrapper
      uses: gradle/actions/wrapper-validation@v3

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3

    - name: Gradle Build
      run: ./gradlew build --scan
      env:
        GRADLE_TOS_AGREE: yes

    - name: Upload Fabric Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: fabric-artifacts
        path: fabric/build/libs/

    - name: Upload Forge Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: forge-artifacts
        path: forge/build/libs/

    - name: Upload NeoForge Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: neoforge-artifacts
        path: neoforge/build/libs/

  release_github:
    name: "Release on GitHub"
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, 'SNAPSHOT')

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Read Project & Minecraft Version
      id: read_versions
      uses: christian-draeger/read-properties@1.1.1
      with:
        path: ./gradle.properties
        properties: projectBaseVersion mcVersionFull

    - name: Read Changelog
      id: read_changelog
      shell: bash
      run: sed '/===/Q' changelog.txt > current-changelog.txt

    - name: Download Artifacts
      id: download_artifacts
      uses: actions/download-artifact@v4
      with:
        path: build_artifacts

    - name: GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ steps.read_versions.outputs.projectBaseVersion }} for Minecraft ${{ steps.read_versions.outputs.mcVersionFull }}
        body_path: ./current-changelog.txt
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
        token: ${{ secrets.GH_RELEASE_TOKEN }}
        files: |
          ${{ steps.download_artifacts.outputs.download-path }}/fabric-artifacts/*
          ${{ steps.download_artifacts.outputs.download-path }}/forge-artifacts/*
          ${{ steps.download_artifacts.outputs.download-path }}/neoforge-artifacts/*
      env:
        GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}

  release_curseforge:
    name: Release on Curseforge
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup jdk 21
      uses: actions/setup-java@v4
      with:
        distribution: adopt
        java-version: 21

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3

    - name: Curseforge Publish
      run: ./gradlew curseforge
      env:
        CURSE_API_KEY: ${{ secrets.CURSE_API_KEY }}

  release_modrinth:
    name: Release on Modrinth
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup jdk 21
      uses: actions/setup-java@v4
      with:
        distribution: adopt
        java-version: 21

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3

    - name: Modrinth Publish
      run: ./gradlew modrinth
      env:
        MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}

  release-maven:
    name: Release on Maven
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup jdk 21
      uses: actions/setup-java@v4
      with:
        distribution: adopt
        java-version: 21

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3

    - name: Maven Publish
      run: ./gradlew publish
      env:
        MAVEN_USER: ${{ secrets.MAVEN_USER }}
        MAVEN_PASS: ${{ secrets.MAVEN_PASS }}
        MAVEN_REPO: ${{ secrets.MAVEN_REPO }}
        MAVEN_SNAPSHOT_REPO: ${{ secrets.MAVEN_SNAPSHOT_REPO }}
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASS }}
